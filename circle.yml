version: 2
jobs:
  build:
    parallelism: 4
    working_directory: ~/mammooc.org
    docker:
      - image: circleci/ruby:2.4.1-node-browsers
        environment:
          RAILS_ENV: test
          COVERALLS_PARALLEL: true
          GEMNASIUM_TESTSUITE: bundle check
          GEMNASIUM_PROJECT_SLUG: github.com/mammooc/mammooc.org
      - image: circleci/postgres:9.6.3
    steps:
      - checkout

      # Restore bundle cache
      - type: restore_cache
        key: mammooc.org-{{ checksum "Gemfile.lock" }}

      # Add dependencies
      - type: shell
        name: Install Gems
        command: bundle install --path vendor/bundle

      - type: shell
        name: Install Mozilla Firefox
        command: |
          sudo apt-get update
          sudo apt-get install python-pip
          pip install mozdownload mozinstall
          mozdownload --version latest --destination firefox.tar.bz2"
          mozinstall firefox.tar.bz2
          echo 'export PATH=firefox/:$PATH' >> $BASH_ENV

      - type: shell
        name: Install Mozilla Gecko
        command: |
          mkdir ~/geckodriver
          wget -O ~/geckodriver/download.tar.gz https://github.com/mozilla/geckodriver/releases/download/v0.18.0/geckodriver-v0.18.0-linux64.tar.gz
          tar -xvzf ~/geckodriver/download.tar.gz -C ~/geckodriver/
          rm ~/geckodriver/download.tar.gz
          chmod +x ~/geckodriver/geckodriver
          echo 'export PATH=~/geckodriver/:$PATH' >> $BASH_ENV

      # Store bundle cache
      - type: save_cache
        key: mammooc.org-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      # Database setup
      - type: shell
        name: Create database
        command: bundle exec rake db:create
      - type: shell
        name: Load schema
        command: bundle exec rake db:schema:load
      - type: shell
        name: Migrate schema
        command: bundle exec rake db:migrate

      # Run rspec in parallel
      - type: shell
        name: Run RSpec in parallel
        command: |
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - type: shell
        name: Run Rubocop
        command: bundle exec rails rubocop:show
        when: always

      - type: shell
        name: Post coverage to Coveralls
        command: |
          curl -H "Content-Type: application/json" --data '{"payload": {"build_num": $CIRCLE_BUILD_NUM, "status": "done"} }' -X POST https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN
        when: always

      # Save artifacts
      - type: store_test_results
        path: /tmp/test-results

      - type: store_artifacts
        path: ~/mammooc.org/rubocop.html
        destination: rubocop

      # Deploy
      - type: deploy
        name: Notify DockerHub
        command: |
          curl -H "Content-Type: application/json" --data '{"build": true}' -X POST $DOCKER_HUB_TRIGGER_URL

      - type: deploy
        name: Deploy to Heroku
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            heroku maintenance:on --app mammooc
            "if [[ -a .git/shallow ]]; then git fetch --unshallow; fi;"
            git push git@heroku.com:mammooc.git master:master
            heroku pg:reset DATABASE --app mammooc --confirm mammooc
            heroku run rails db:schema:load RAILS_ENV=production --app mammooc
            heroku run rails db:seed RAILS_ENV=development --app mammooc
            heroku restart --app mammooc
            heroku maintenance:off --app mammooc
          elif [ "${CIRCLE_BRANCH}" == "dev" ]; then
            heroku maintenance:on --app mammooc-dev
            "if [[ -a .git/shallow ]]; then git fetch --unshallow; fi;"
            git push git@heroku.com:mammooc-dev.git dev:master
            heroku pg:reset DATABASE --app mammooc-dev --confirm mammooc-dev
            heroku run rails db:schema:load RAILS_ENV=production --app mammooc-dev
            heroku run rails db:seed RAILS_ENV=development --app mammooc-dev
            heroku restart --app mammooc-dev
            heroku maintenance:off --app mammooc-dev
          fi

      - type: deploy
        name: Run Gemnasium check for outdated Gems
        command: |
          if [[ $CIRCLE_BRANCH == dev ]]; then
            sudo sh -c 'echo "deb http://apt.gemnasium.com stable main" > /etc/apt/sources.list.d/gemnasium.list'
            sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com E5CEAB0AC5F1CA2A
            sudo apt-get update
            sudo apt-get install gemnasium-toolbelt
            sh -c 'GEMNASIUM=true; gemnasium autoupdate run; exit 0'
          else
            exit 0
          fi
