# -*- encoding : utf-8 -*-
module Users
  class OmniauthCallbacksController < Devise::OmniauthCallbacksController
    def self.provides_callback_for(provider)
      class_eval %{
      def #{provider}
        @user = User.find_for_omniauth(env["omniauth.auth"], current_user)

        if @user.persisted?
          session[:user_original_url] = user_settings_path(current_user.id) + "?subsite=account" if request.referer.present? && request.referer.include?("settings?subsite=account")
          sign_in_and_redirect @user, event: :authentication
          set_flash_message(:notice, :success, kind: "#{provider}".titleize) if is_navigational_format?
        else
          session["devise.#{provider}_data"] = env["omniauth.auth"]
          redirect_to new_user_registration_url
        end
      end
    }
    end

    [:facebook, :google, :github, :linkedin, :twitter, :windows_live, :amazon].each do |provider|
      provides_callback_for provider
    end

    def deauthorize
      flash['error'] ||= ''
      flash['success'] ||= ''
      if current_user.identities.count > 1 || !current_user.password_autogenerated
        begin
          UserIdentity.find_by(user: current_user, omniauth_provider: deauthorize_params[:provider]).destroy!
        rescue
          flash['error'] << t('users.settings.identity_not_deleted', provider: deauthorize_params[:provider].titleize)
        else
          flash['success'] << t('users.settings.identity_deleted', provider: deauthorize_params[:provider].titleize)
        end
      else
        flash['error'] << t('users.settings.identity_not_deleted', provider: deauthorize_params[:provider].titleize)
      end
      redirect_to "#{user_settings_path(current_user.id)}?subsite=account"
    end

    private

    def deauthorize_params
      params.permit(:provider)
    end
  end
end
