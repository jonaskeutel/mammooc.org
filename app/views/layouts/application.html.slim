doctype html
html
  head
    meta charset="utf-8"
    meta http-equiv="X-UA-Compatible" content="IE=edge"
    meta name="viewport" content="width=device-width, initial-scale=1"
    meta name="description" content=""
    meta name="author" content=""
    title
      = yield(:title)
    /! HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries
    /[if lt IE 9]
      = javascript_include_tag "https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js", "https://oss.maxcdn.com/respond/1.4.2/respond.min.js"
    = stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true
    = javascript_include_tag 'application', 'data-turbolinks-track' => true
    = csrf_meta_tags
  body
    nav class="navbar navbar-inverse navbar-fixed-top" role="navigation"
      .container
        .navbar-header
          button.navbar-toggle.collapsed type="button" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar"
            span.sr-only
              | Toggle navigation
            span.icon-bar
            span.icon-bar
            span.icon-bar
          = link_to t('MAMMOOC'), root_path, :class => "navbar-brand"
        .collapse.navbar-collapse id="navbar"
          ul.nav.navbar-nav.navbar-right
            li class=('active' if current_page?(root_path))
              = link_to t('home'), root_path
            li class=('active' if current_page?(about_path))
              = link_to t('about'), about_path
            li class=('active' if current_page?(impressum_path))
              = link_to t('static_pages.impressum.headline'), impressum_path
            li.dropdown
              a.dropdown-toggle href="#" data-toggle="dropdown" role="button" aria-expanded="false"
                = I18n.locale.upcase
                span.caret
              ul.dropdown-menu role="menu"
                - (I18n.available_locales - [I18n.locale]).each do |l|
                  li
                    a href="#{request.fullpath.split('?')[0]}?language=#{l}"
                      = language_names[l]


    - flash.each do |name, msg|
      - if not msg.empty?
        = content_tag :div, :class => "alert alert-#{ name.to_s == :error.to_s ? "danger" : "success" } alert-dismissable", :role => "alert" do
          button.close type="button" data-dismiss="alert"
            span aria-hidden="true"
              | &times;
            span.sr-only
              = t('close')
          - if msg.class == Array
            - msg.each do |message|
              = message
              br
            end
          - else
            = msg
          end
      end

    = yield