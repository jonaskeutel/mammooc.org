= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { class: 'form-horizontal', method: :put }) do |f|
  - if devise_mapping.confirmable? && resource.pending_reconfirmation?
    div
      = t('users.settings.pending_mail_confirmation')
      = resource.unconfirmed_email
  .form-group
    .text-left
      = f.label :password, t('users.settings.new_password'), :class => 'col-sm-2 control-label'
    .col-sm-10
      = f.password_field :password, :class => 'form-control', autocomplete: "off", placeholder: t('users.settings.new_password_info')
  .form-group
    .text-left
      = f.label :password_confirmation, t('users.settings.new_password_confirmation'), :class => 'col-sm-2 control-label'
    .col-sm-10
      = f.password_field :password_confirmation, :class => 'form-control', autocomplete: "off", placeholder: t('users.settings.new_password_info')
  - unless current_user.password_autogenerated
    .form-group
      .text-left
        = f.label :current_password, t('users.settings.current_password'), :class => 'col-sm-2 control-label'
      .col-sm-10
        = f.password_field :current_password, :class => 'form-control', autocomplete: "off", placeholder: t('users.settings.password_confirmation_info')
  .form-group
    .actions
      .col-sm-offset-2.col-sm-10
        = f.submit t('users.settings.update_account'), :class => 'btn btn-primary'
br /
br /
br /
h3
  = t('users.settings.manage_omniauth')
p
  - if devise_mapping.omniauthable?
    - resource_class.omniauth_providers.each do |provider|
      - if current_user.identities.pluck(:omniauth_provider).include?(provider.to_s) && (current_user.identities.count > 1 || !current_user.password_autogenerated)
        = link_to t('users.settings.remove_identity', provider: provider.to_s.titleize), omniauth_deauthorize_path(provider)
      - elsif current_user.identities.pluck(:omniauth_provider).include?(provider.to_s) && current_user.identities.count == 1 && current_user.password_autogenerated
        = "#{provider.to_s.titleize}: #{t('users.settings.only_one_provider')}"
      -else
        = link_to t('users.settings.add_identity', provider: provider.to_s.titleize), omniauth_authorize_path(resource_name, provider)
      br
    - if current_user.identities.pluck(:omniauth_provider).include?('easyID') && (current_user.identities.count > 1 || !current_user.password_autogenerated)
      = link_to t('users.settings.easyID.remove_identity'), omniauth_deauthorize_path('easyID')
    - elsif current_user.identities.pluck(:omniauth_provider).include?('easyID') && current_user.identities.count == 1 && current_user.password_autogenerated
      = t('users.settings.easyID.only_one_provider')
    -else
      = link_to t('users.settings.easyID.add_identity'), easy_id_link
    hr
    = t('users.sign_in_up.easyID.notice', link: link_to(t('users.sign_in_up.easyID.link'), 'https://www.ausweisapp.bund.de/', target: '_blank')).html_safe
h3
  = t('users.settings.cancel_account')
p
  = button_to t('users.settings.cancel_account'), registration_path(resource_name), :class => "btn btn-primary", data: { confirm: "Are you sure?" },  method: :delete
